/*
 * Copyright (c) 2011 Google Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

package com.google.api.client.auth.oauth2;

import com.google.api.client.util.Key;
import com.google.common.base.Preconditions;

/**
 * OAuth 2.0 URL parser for the redirect URL after end user grants or denies authorization as
 * specified in <a
 * href="http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-4.1.2">Authorization
 * Response</a>.
 * 
 * <p>
 * Implementation is not thread-safe.
 * </p>
 * 
 * @since 1.7
 * @author Yaniv Inbar
 */
public class AuthorizationCodeResponseUrl extends AuthorizationResponseUrl {

  /** Authorization code generated by the authorization server or {@code null} for none. */
  @Key
  private String code;

  /**
   * @param encodedResponseUrl encoded response URL
   */
  public AuthorizationCodeResponseUrl(String encodedResponseUrl) {
    super(encodedResponseUrl);
    // either error or code but not both
    Preconditions.checkArgument((code == null) != (getError() == null));
  }

  /**
   * Returns the authorization code generated by the authorization server or {@code null} for none.
   */
  public final String getCode() {
    return code;
  }

  /**
   * Sets the authorization code generated by the authorization server or {@code null} for none.
   * 
   * <p>
   * Overriding is only supported for the purpose of calling the super implementation and changing
   * the return type, but nothing else.
   * </p>
   */
  public AuthorizationResponseUrl setCode(String code) {
    this.code = code;
    return this;
  }
}
